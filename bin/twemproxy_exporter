#! /usr/bin/env ruby

require 'optparse'
require 'prometheus/client/rack/exporter'
require 'rack'
require 'yaml'

config = {}

OptionParser.new do |args|
  args.banner = "#{$0} [flags] host[:port] ..."

  args.on('-i', '--interval <seconds>') do |seconds|
    config['interval'] = seconds.to_i
  end

  args.on('-t', '--timeout <seconds>') do |seconds|
    config['timeout'] = seconds.to_f
  end

  args.on('-f', '--config <file>') do |file|
    config = YAML.load_file(file)
  end

  args.on('-p', '--port <number>') do |port|
    config['port'] = port.to_i
  end

  args.on('-b', '--bind <address>') do |bind|
    config['bind'] = bind
  end
end.parse!

require_relative '../lib/exporter'
config['proxies'] = Array(config['proxies']) + ARGV
exporter = Exporter.new(config)
Thread.new {exporter.run!}

app = Rack::Builder.app do
  use Rack::CommonLogger
  use Prometheus::Client::Rack::Exporter
  use Rack::Deflater, if: ->(_, _, _, body) { body.any? && body[0].length > 512 }

  map '/' do
    run ->(env) {[200, {'Content-Type' => 'text/plain'}, ['OK']]}
  end
end

Rack::Server.start({
  app:       app,
  AccessLog: [], # Shut up, WEBrick.
  Host:      config['bind'] || '0.0.0.0',
  Port:      config['port'] || 9222
})
